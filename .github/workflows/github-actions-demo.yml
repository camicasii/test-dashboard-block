name: main
on: [push]

jobs:
  push_to_registry:
    environment: production
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: intall
        uses: actions/setup-node@v2
        with:
          node-version: "14"                 
          run: yarn  && yarn build         
      - name: Log in to Docker Hub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASS }}
      
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: camicasii/test
      
      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
  # test:
    # name: Test - Unit & Integration
    # runs-on: ubuntu-18.04
    # environment: production
    # steps:
      # - uses: actions/checkout@v2
      # - uses: actions/setup-node@v2
        # with:
          # node-version: "14"          
      # - name: Install packages
#        run: echo ${{ secrets.DOCKER_USE }}
#        run: docker login -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_PASS }}
      # - name: build app
        # run: yarn build
  # docker:
    # name: Publish - Docker Hub
    # runs-on: ubuntu-18.04
    # needs: [test]
    # env:
      # REPO: ${{ secrets.DOCKER_REPO }}
    # steps:
      # - uses: actions/checkout@v2
      # - uses: actions/setup-node@v2
        # with:
          # node-version: "14"
      # - name: Install packages
        # run: docker login -u ${{ secrets.DOCKER_USER }}
            # -p ${{ secrets.DOCKER_PASS }}
      # - name: Build Docker image
        # run: docker build -t $REPO:latest -t $REPO:${GITHUB_SHA::8} .
      # - name: Publish Docker image
        # run: docker push $REPO
# 